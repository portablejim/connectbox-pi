---
# These parameters apply to all hosts. While this would normally be
#  put in as host_vars, the IP address of the device will be different
#  for each deployment, so it's easier to put it here.

# Parameterised to allow overriding during CI builds, where we want to
#  test some client-facing capabilities but do not have a wifi interface
client_facing_if: "wlan0"

# Client facing if stuff is defined here because we have a circular dependency
# in that dns-dhcp depends
#  on the IP address for wlan0 that's defined in the network-interfaces role
#  but network-interfaces needs dnsmasq to be installed (which is done by the
#  dns-dhcp role)
client_facing_if_ip_address: fdb1:b1e5::1
client_facing_if_netmask: 64
client_facing_if_network_cidr: fdb1:b1e5::/64

# Used to serve dns on LAN in developer mode, principally for testing.
# In situations where there are multiple wired ethernet interfaces, this is
#  not necessarily the same interface as the one used for SSH.
lan_dns_if: eth0

# Used in multiple roles, so defaults defined here rather than in a role
php_service: php7.0-fpm
fastcgi_pass_sock: unix:/var/run/php/php7.0-fpm.sock

connectbox_web_root: /var/www/connectbox
connectbox_default_content_root: "{{ connectbox_web_root }}/connectbox_default"
connectbox_admin_root: "{{ connectbox_web_root }}/admin"
connectbox_app_root: "{{ connectbox_web_root }}/app"
connectbox_virtualenv: "{{ connectbox_web_root }}/connectbox_virtualenv"
connectbox_config_root: /etc/connectbox
connectbox_usb_files_root: /media/usb0
connectbox_admin_credentials: admin:$apr1$CBOXFOO2$usYeNWIKOX910UnI/jugh.
connectbox_default_hostname: connectbox
connectbox_log_dir: /var/log/connectbox
connectbox_access_log: "{{ connectbox_log_dir }}/connectbox-access.log"
connectbox_error_log:  "{{ connectbox_log_dir }}/connectbox-error.log"

access_log_analyzer_repo: https://github.com/ConnectBox/access-log-analyzer.git
connectbox_client_repo: https://github.com/ConnectBox/connectbox-react-icon-client.git
connectbox_client_path: published/
connectbox_reports_repo: https://github.com/ConnectBox/connectbox-reports.git
connectbox_reports_path: published/

nginx_admin_block: |
      # Admin interface
      location /admin {
        root {{ connectbox_web_root }};
        auth_basic "Access Denied";
        auth_basic_user_file /usr/local/connectbox/etc/basicauth;
      }

      # Admin reports interface
      location /reports {
        root {{ connectbox_admin_root }};
        auth_basic "Access Denied";
        auth_basic_user_file /usr/local/connectbox/etc/basicauth;
      }

      # Admin worker scripts
      # pass the PHP scripts to FastCGI server via unix domain socket
      location ~ ^/admin/(?<script_name>.+\.php)(?<path_info>/.+)$ {
        root {{ connectbox_web_root }};
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$script_name;
        fastcgi_param PATH_INFO $path_info;
        fastcgi_param PATH_TRANSLATED $document_root$path_info;
        include snippets/fastcgi-php.conf;
        fastcgi_pass {{ fastcgi_pass_sock }};
        auth_basic "Access Denied";
        auth_basic_user_file /usr/local/connectbox/etc/basicauth;
      }

nginx_chat_block: |
    location /chat {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://[::1]:{{ gunicorn_listen_port }}/chat;
      # Never cache
      expires -1;
    }

# Don't perform image prep tasks unless overridden
do_image_preparation: False

# i.e. allow inbound ssh from all interfaces
# Overriden in bootstrap role for non-developer mode
iptables_ssh_in_interface: ""

#firewall_v4_group_rules:
firewall_v6_group_rules:
  150 redirect http:
    - -t nat -A PREROUTING -s {{ client_facing_if_network_cidr }} -p tcp --dport 80 -j DNAT --to {{ client_facing_if_ip_address }}:80
  # Overriding default - we only want ssh on the wired interface
  200 allow ssh:
    - -A INPUT -p tcp {{ iptables_ssh_in_interface }} --dport ssh -j ACCEPT
  300 allow dhcp:
    - -A INPUT -p udp --dport bootps -j ACCEPT
  350 allow dns:
    - -A INPUT -p udp --dport domain -j ACCEPT
    - -A INPUT -p tcp --dport domain -j ACCEPT
  400 allow web traffic:
    - -A INPUT -p tcp --dport http -j ACCEPT
